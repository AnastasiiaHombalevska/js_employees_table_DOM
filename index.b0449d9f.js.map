{"mappings":"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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\n// додати сортування у зворотньому порядку\nvar table = document.querySelector(\"table\");\nvar header = document.querySelector(\"thead\");\nvar titles = header.querySelectorAll(\"th\");\nvar tableBody = document.querySelector(\"tbody\");\nvar SALARY_CELL = Array.from(titles).findIndex(function(title) {\n    return title.textContent.trim().toLowerCase() === \"salary\";\n});\ntitles.forEach(function(title, index) {\n    title.addEventListener(\"click\", function() {\n        return sortsData(index);\n    });\n});\nfunction sortsData(columnNumber) {\n    var sortingData = Array.from(tableBody.querySelectorAll(\"tr\"));\n    var sortedData = sortingData.sort(function(item1, item2) {\n        var cell1 = item1.querySelectorAll(\"td\")[columnNumber].textContent.trim();\n        var cell2 = item2.querySelectorAll(\"td\")[columnNumber].textContent.trim();\n        var isNumeric = !isNaN(cell1) && !isNaN(cell1);\n        if (columnNumber === SALARY_CELL) return parseFloat(cell1.slice(1)) - parseFloat(cell2.slice(1));\n        else if (isNumeric) return parseFloat(cell1) - parseFloat(cell2);\n        else return cell1.localeCompare(cell2);\n    });\n    sortedData.forEach(function(row) {\n        return tableBody.appendChild(row);\n    });\n}\ntableBody.addEventListener(\"click\", function(e) {\n    var rows = tableBody.querySelectorAll(\"tr\");\n    var targetClick = e.target.closest(\"tr\");\n    rows.forEach(function(row) {\n        return row.classList.remove(\"active\");\n    });\n    if (targetClick.tagName === \"TR\") {\n        if (targetClick.className) targetClick.classList.add(\"active\");\n        else targetClick.className = \"active\";\n    }\n});\n// додати форму, що дозволяє додавати новий робітників до таблиці\n// 3. Write a script to add a form to the document\n// Form allows users to add new employees to the spreadsheet.\nvar form = document.createElement(\"form\");\nform.className = \"new-employee-form\";\nvar _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\ntry {\n    for(var _iterator = titles[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n        var title = _step.value;\n        var label = document.createElement(\"label\");\n        var value = title.textContent.trim().toLowerCase();\n        label.textContent = value[0].toUpperCase() + value.slice(1) + \": \";\n        var input = document.createElement(\"input\");\n        input.setAttribute(\"name\", \"name\");\n        if (value === \"age\" || value === \"salary\") input.setAttribute(\"type\", \"number\");\n        else input.setAttribute(\"type\", \"text\");\n        input.setAttribute(\"data-qa\", value);\n        input.setAttribute(\"placeholder\", \"Enter \" + value);\n        input.setAttribute(\"required\", \"\");\n        label.insertAdjacentElement(\"beforeend\", input);\n        form.appendChild(label);\n    }\n} catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n} finally{\n    try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n        }\n    } finally{\n        if (_didIteratorError) {\n            throw _iteratorError;\n        }\n    }\n}\nvar select = document.createElement(\"select\");\nselect.setAttribute(\"required\", \"\");\nvar optionValues = [\n    \"\",\n    \"Tokyo\",\n    \"Singapore\",\n    \"London\",\n    \"New York\",\n    \"Edinburgh\",\n    \"San Francisco\"\n];\nfor(var i = 0; i < optionValues.length; i++){\n    var option = document.createElement(\"option\");\n    // if (i === 0) {\n    //   option.setAttribute('disabled', '')\n    // }\n    option.setAttribute(\"value\", optionValues[i].toLowerCase());\n    option.textContent = optionValues[i];\n    select.appendChild(option);\n}\nform.appendChild(select);\nvar submitBtn = document.createElement(\"button\");\nsubmitBtn.setAttribute(\"type\", \"submit\");\nsubmitBtn.textContent = \"Save to tableBody\";\nform.appendChild(submitBtn);\ntable.insertAdjacentElement(\"afterend\", form);\nform.addEventListener(\"click\", function(e) {\n    if (e.target.tagName === \"BUTTON\") e.preventDefault();\n}); // показати повідомлення, якщо дані не валідні\n // 4. Show notification if form data is invalid\n // (use notification from the previous tasks).\n // додати редагування комірок при подвійному кліку\n // 5. Implement editing of tableBody cells by double-clicking on it. (optional)\n\n//# sourceMappingURL=index.b0449d9f.js.map\n","'use strict';\n\n// додати сортування у зворотньому порядку\nconst table = document.querySelector('table');\nconst header = document.querySelector('thead');\nconst titles = header.querySelectorAll('th');\nconst tableBody = document.querySelector('tbody');\n\nconst SALARY_CELL = Array.from(titles).findIndex(\n  (title) => title.textContent.trim().toLowerCase() === 'salary',\n);\n\ntitles.forEach((title, index) => {\n  title.addEventListener('click', () => sortsData(index));\n});\n\nfunction sortsData(columnNumber) {\n  const sortingData = Array.from(tableBody.querySelectorAll('tr'));\n  const sortedData = sortingData.sort((item1, item2) => {\n    const cell1 = item1.querySelectorAll('td')[columnNumber].textContent.trim();\n    const cell2 = item2.querySelectorAll('td')[columnNumber].textContent.trim();\n\n    const isNumeric = !isNaN(cell1) && !isNaN(cell1);\n\n    if (columnNumber === SALARY_CELL) {\n      return parseFloat(cell1.slice(1)) - parseFloat(cell2.slice(1));\n    } else if (isNumeric) {\n      return parseFloat(cell1) - parseFloat(cell2);\n    } else {\n      return cell1.localeCompare(cell2);\n    }\n  });\n\n  sortedData.forEach((row) => tableBody.appendChild(row));\n}\n\ntableBody.addEventListener('click', (e) => {\n  const rows = tableBody.querySelectorAll('tr');\n  const targetClick = e.target.closest('tr');\n\n  rows.forEach((row) => row.classList.remove('active'));\n\n  if (targetClick.tagName === 'TR') {\n    if (targetClick.className) {\n      targetClick.classList.add('active');\n    } else {\n      targetClick.className = 'active';\n    }\n  }\n});\n\n// додати форму, що дозволяє додавати новий робітників до таблиці\n// 3. Write a script to add a form to the document\n// Form allows users to add new employees to the spreadsheet.\n\nconst form = document.createElement('form');\n\nform.className = 'new-employee-form';\n\nfor (const title of titles) {\n  const label = document.createElement('label');\n  const value = title.textContent.trim().toLowerCase();\n\n  label.textContent = value[0].toUpperCase() + value.slice(1) + ': ';\n\n  const input = document.createElement('input');\n\n  input.setAttribute('name', 'name');\n\n  if (value === 'age' || value === 'salary') {\n    input.setAttribute('type', 'number');\n  } else {\n    input.setAttribute('type', 'text');\n  }\n\n  input.setAttribute('data-qa', value);\n  input.setAttribute('placeholder', 'Enter ' + value);\n  input.setAttribute('required', '');\n\n  label.insertAdjacentElement('beforeend', input);\n\n  form.appendChild(label);\n}\n\nconst select = document.createElement('select');\n\nselect.setAttribute('required', '');\n\nconst optionValues = [\n  '',\n  'Tokyo',\n  'Singapore',\n  'London',\n  'New York',\n  'Edinburgh',\n  'San Francisco',\n];\n\nfor (let i = 0; i < optionValues.length; i++) {\n  const option = document.createElement('option');\n\n  // if (i === 0) {\n  //   option.setAttribute('disabled', '')\n  // }\n  option.setAttribute('value', optionValues[i].toLowerCase());\n  option.textContent = optionValues[i];\n\n  select.appendChild(option);\n}\n\nform.appendChild(select);\n\nconst submitBtn = document.createElement('button');\n\nsubmitBtn.setAttribute('type', 'submit');\nsubmitBtn.textContent = 'Save to tableBody';\nform.appendChild(submitBtn);\n\ntable.insertAdjacentElement('afterend', form);\n\nform.addEventListener('click', (e) => {\n  if (e.target.tagName === 'BUTTON') {\n    e.preventDefault();\n  }\n});\n\n// показати повідомлення, якщо дані не валідні\n// 4. Show notification if form data is invalid\n// (use notification from the previous tasks).\n\n// додати редагування комірок при подвійному кліку\n// 5. Implement editing of tableBody cells by double-clicking on it. (optional)\n"],"names":["table","document","querySelector","titles","header","querySelectorAll","tableBody","SALARY_CELL","Array","from","findIndex","title","textContent","trim","toLowerCase","forEach","index","addEventListener","sortsData","columnNumber","sortedData","sortingData","sort","item1","item2","cell1","cell2","isNumeric","isNaN","parseFloat","slice","localeCompare","row","appendChild","e","rows","targetClick","target","closest","classList","remove","tagName","className","add","form","createElement","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","value","label","toUpperCase","input","setAttribute","insertAdjacentElement","err","return","select","optionValues","i","length","option","submitBtn","preventDefault"],"version":3,"file":"index.b0449d9f.js.map"}